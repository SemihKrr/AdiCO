<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picBoxPicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        U1Xatevfr3X31SWtT+oAAAAASUVORK5CYII=
</value>
  </data>
</root>